{"version":3,"sources":["Todo/TodoItem.jsx","Todo/TodoItemList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","state","expanded","handleClick","bind","this","setState","className","onClick","name","priority","estimate","description","React","Component","TodoItemList","todoListKey","emptyForm","savedTodoItems","initiateTaskList","todoList","displayNewTaskForm","formData","appendTask","handleFormUpdate","savedItems","localStorage","getItem","undefined","JSON","parse","event","preventDefault","currentTasks","push","setItem","stringify","form","target","ariaLabel","value","onSubmit","type","placeholder","aria-label","onChange","step","pattern","map","todo","key","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.444d83fc.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class TodoItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...props,\n            expanded: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState({\n            expanded: !this.state.expanded\n        });\n    }\n\n    render() {\n        if (!this.state.expanded)\n            return <div className=\"task-list-item row blue lighten-4 z-depth-4\" onClick={() => this.handleClick()}>{this.state.name}</div>;\n        return (\n            <div className=\"task-list-item row orange lighten-4 z-depth-4\" onClick={() => this.handleClick()}>\n                <div className=\"col s3\">{this.state.name}</div>\n                <div className=\"col s3\">{this.state.priority}</div>\n                <div className=\"col s3\">{this.state.estimate}</div>\n                <div className=\"col s3\">{this.state.description}</div>\n            </div>\n        );\n    }\n}","import TodoItem from \"./TodoItem\";\n\nimport React from 'react';\n\nexport default class TodoItemList extends React.Component {\n\n    todoListKey = \"todoItems\";\n    emptyForm = () => ({\n        name: '',\n        priority: 0,\n        estimate: '',\n        description: ''\n    });\n\n    constructor(props) {\n        super(props);\n        let savedTodoItems = this.initiateTaskList();\n        this.state = {\n            todoList: savedTodoItems,\n            displayNewTaskForm: false,\n            formData: this.emptyForm()\n        };\n        this.appendTask = this.appendTask.bind(this);\n        this.handleFormUpdate = this.handleFormUpdate.bind(this);\n    }\n\n    initiateTaskList() {\n        let savedItems = localStorage.getItem(this.todoListKey);\n        if (savedItems === null || typeof savedItems === undefined) {\n            savedItems = [];\n        } else {\n            savedItems = JSON.parse(localStorage.getItem(this.todoListKey));\n        }\n        return savedItems;\n    }\n\n    appendTask(event) {\n        event.preventDefault();\n        let currentTasks = this.state.todoList;\n        currentTasks.push(this.state.formData);\n        localStorage.setItem(this.todoListKey, JSON.stringify(currentTasks));\n        this.setState({\n            todoList: currentTasks,\n            formData: this.emptyForm()\n        });\n    }\n\n    handleFormUpdate(event) {\n        event.preventDefault();\n        let form = this.state.formData;\n        form[event.target.ariaLabel] = event.target.value;\n        this.setState({\n            formData: form\n        });\n    }\n\n    render() {\n        let form = <></>;\n        if (this.state && this.state.displayNewTaskForm) {\n            form = (<div className=\"modal\"><form className=\"input-form modal-content\" onSubmit={this.appendTask}>\n                <input type=\"text\" name=\"name\" placeholder=\"task name\" aria-label=\"name\" onChange={(event) => this.handleFormUpdate(event)} value={this.state.formData.name}></input>\n                <input type=\"number\" name=\"priority\" placeholder=\"priority\" aria-label=\"priority\" step=\"1\" pattern=\"[0-9]\" onChange={(event) => this.handleFormUpdate(event)} value={this.state.formData.priority}></input>\n                <input type=\"text\" name=\"estimate\" placeholder=\"1 hour\" aria-label=\"estimate\" onChange={(event) => this.handleFormUpdate(event)} value={this.state.formData.estimate}></input>\n                <input type=\"text\" name=\"description\" placeholder=\"important stuff\" aria-label=\"description\" onChange={(event) => this.handleFormUpdate(event)} value={this.state.formData.description}></input>\n                <button className=\"btn waves-effect waves-light\" type=\"submit\">Submit<i className=\"material-icons right\">send</i></button>\n            </form></div>);\n        }\n        return (\n            <>\n                <div className=\"todo-list container\">\n                    {this.state && this.state.todoList && this.state.todoList.map(todo => (<TodoItem {...todo}  key={todo.name} />))}\n                </div>\n\n                <button title=\"add task\" onClick={() => this.setState({ displayNewTaskForm: !this.state.displayNewTaskForm })} className=\"btn-floating btn-large waves-effect waves-light red add-task-button\"><i className=\"material-icons\">add</i></button>\n\n                { form}\n            </>\n        );\n    }\n}","import './App.css';\nimport TodoItemList from './Todo/TodoItemList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoItemList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}